[{"title":"Introduction", "arr":[{"title":"Ad Hoc Problems - Part 1", "arr":[["Easy", 272, 494, 499, 10300, -10420, 10550, 11044, 11172, 11332, 11498, 11547, -11559, 11727, 11764, -11799, 11942, 12015],["Game (Card)", 162, -462, 555, -10205, -10646, 11225, 11678],["Game (Chess)", 255, -278, -696, 10196, -10284, 10849, 11494],["Game (Others)", 220, 227, 232, 339, 340, 489, -584, 647, -10189, 10279, 10363, 10409, 10443, 10530, 10813, 10903, -11459],["Josephus", 130, 133, -151, -305, 402, 440, -10015],["Palindrome / Anagram", 148, -156, -195, 353, 401, 454, 630, 10018, 10098, 10945, -11221, 11309]]},{"title":"Ad Hoc Problems - Part 2", "arr":[["Interesting Real Life Problems", -161, 346, 400, 403, 448, 538, -637, 706, 10082, 10191, 10415, 10528, 10554, 10659, -10812, 11223, 11530, 11743, 11984],["Time", 170, 300, -579, -893, 10070, 10371, 10683, 11219, 11356, 11650, 11677, -11947, 11958, 12019],["Just Ad Hoc", 101, 114, 119, 121, 139, 141, 144, 145, 187, 335, 337, 349, 362, 379, 381, 405, 434, 457, 496, -556, 573, 608, 621, 661, -978, 1091, 1225, 1241, 10019, 10033, -10114, 10141, 10142, 10188, 10267, 10324, 10424, 10707, 10865, 10919, 10963, 11140, 11507, 11586, 11661, 11679, 11687, 11717, 11850, 11917, 11946, 11956, 12060, 12085, 12136, 12250]]}]},{"title":"Data Structures and Libraries", "arr":[{"title":"Linear Data Structures with Built-in Libraries", "arr":[["Basic Data Structures", 394, 414, 466, 467, 482, 541, 591, 594, 700, 10016, 10038, 10050, 10260, 10703, 10855, 10920, 10978, 11040, 11192, 11222, -11340, 11349, 11360, 11364, 11496, -11581, 11608, 11760, 11835, 11933, -11988],["C++ STL algorithm (Java Collections)", 123, -146, 1209, 10194, -10258, 10880, 10905, 11039, 11321, -11588, 11621, 11777, 11824],["Sorting-related problems", 110, 299, 450, 612, -855, 10107, 10327, 10810, -11462, 11495, 11714, -11858],["C++ STL stack (Java Stack)", 120, 127, -514, 551, 673, -727, 732, 10858, -11111],["C++ STL queue (Java Queue)", 540, -10172, -10901, 10935, -11034]]},{"title":"Non Linear Data Structures with Built-in Libraries", "arr":[["C++ STL priority_queue (Java PriorityQueue)", -1203, -10954, -11995],["C++ STL map/set (Java TreeMap/TreeSet)", 417, 484, 501, 642, 755, 860, -10226, 10282, 10295, 10374, 10686, 10815, 11062, 11136, 11239, -11286, 11308, -11629, 11849, 11860]]},{"title":"Data Structures with Our-Own Libraries", "arr":[["Graph Data Structures Problems", 599, -10720, -10895, 10928, 11414, 11550, -11991],["Union-Find Disjoint Sets", 459, -793, 10158, 10178, 10227, -10507, 10583, 10608, 10685, -11503, 11690, 11966],["Tree-related Data Structures", 297, 1232, -11235, 11297, 11350, -11402, 11525, -11926, 12086]]}]},{"title":"Problem Solving Paradigms", "arr":[{"title":"Complete Search", "arr":[["Iterative (The Easier Ones)", 102, 105, 140, 154, 188, 256, 296, 331, 347, 386, -435, 441, 471, 617, 626, 725, 927, 1237, 1260, 10041, 10102, 10365, 10487, 10662, 10677, 10976, 11001, 11005, 11059, 11078, -11242, 11342, 11412, 11565, -11742],["Iterative (The More Challenging Ones)", 253, 639, 703, 735, 932, 10125, 10177, 10360, -10660, 10973, 11108, -11205, -11553, 11804, 11959],["Recursive Backtracking (The Easier Ones)", 167, 222, 380, 487, 524, 539, 574, 598, -624, 628, 677, 729, 750, 1261, 10017, 10276, 10344, 10452, 10475, -10503, 10576, -11085, 11201, 12249],["Recursive Backtracking (The More Challenging Ones)", 165, 193, 208, -416, 433, 565, 868, 1098, 1262, 10094, -10309, 10582, -11195]]},{"title":"Dynamic Programming", "arr":[["Longest Increasing Subsequence (LIS)", 111, 231, 437, -481, 497, 1196, 10131, 10534, -11456, -11790],["Max Sum", -108, -507, 787, 836, 983, 10074, 10667, 10684, -10827],["0-1 Knapsack (Subset Sum)", 562, 990, 1213, 10130, 10261, -10616, 10664, -10819, 11658, -11832],["Coin Change (CC)", 147, 166, -357, 674, -10306, 10313, 11137, -11517],["Traveling Salesman Problem (TSP)", -216, -10496, -11284],["Other Classical Problems", -348, -10304],["Non Classical (The Easier Ones)", 116, 571, 10003, 10036, -10337, 10400, 10465, -10721, 10910, 10912, -10943, 11341, 11407, 11420, 11450, 11703]]},{"title":"Greedy", "arr":[["Standard", 311, 410, 1193, 10020, 10026, 10152, 10249, 10340, 10382, 10440, 10602, -10656, 10670, 10672, 10700, 10714, 10718, 10747, 10763, 10785, 11054, 11103, -11157, 11292, 11369, -11389, 11520, 11532, 11567, 11729, 11900]]},{"title":"Divide and Conquer", "arr":[["Binary Search", 679, 957, 1195, 10077, -10341, 10474, 10611, 10706, 10742, 11057, -11413, 11876, 11881, -11935]]}]},{"title":"Graph", "arr":[{"title":"Graph Traversal", "arr":[["Just Graph Traversal", 118, -168, 280, 614, 824, 1205, 10113, 10116, 10377, 10687, -11831, -11902, 11906],["Flood Fill/Finding Connected Components", 260, 352, 469, 572, 657, 776, 782, 784, 785, 852, 871, 1197, 10336, 10946, -11094, -11110, 11244, 11470, 11518, 11561, 11749, -11953],["Topological Sort", 124, 200, -872, -10305, -11060, 11686],["Bipartite Graph Check", -10004, 10505, -11080, -11396],["Finding Articulation Points/Bridges", -315, 610, -796, -10199],["Finding Strongly Connected Components", -247, 1229, 10731, -11504, 11709, 11770, -11838]]},{"title":"Minimum Spanning Tree", "arr":[["Standard", 908, 1208, 1235, 10034, -11228, -11631, 11710, 11733, -11747, 11857],["Variants", 534, 544, 1216, 1234, 1265, -10048, 10099, 10147, -10369, 10397, 10462, -10600, 10842]]},{"title":"Single-Source Shortest Paths (SSSP)", "arr":[["On Unweighted Graph: BFS", 314, -321, 336, 383, 429, 439, 532, 567, 627, 762, 924, 928, 1251, 1253, 10009, 10044, -10047, 10067, 10150, 10422, 10610, 10653, 10959, 10977, 11049, -11101, 11352, 11513, 11624, 11792, 11974, 12160],["On Weighted Graph: Dijkstra's", 341, 929, 1202, 10166, 10269, 10278, 10389, 10603, -10801, 10986, -11367, 11377, -11492, 11833, 12138],["On Graph with Negative Weight Cycle: Bellman Ford's", -558, -10557, -11280]]},{"title":"All-Pairs Shortest Paths", "arr":[["Standard", 186, 423, -821, 1198, 1233, 1247, -10171, 10724, 10793, 10803, 10947, 11015, -11463],["Variants", -104, 125, 436, -334, 869, -11047]]},{"title":"Maximum Flow", "arr":[["Standard", -259, 753, -820, -10480, 10511, 10779],["Variants", 563, 1242, 1259, 10092, 10330, -10594, -10746, 10806, -11506]]},{"title":"Special Graph (Directed Acyclic Graph)", "arr":[["Single-Source Shortest/Longest Paths on DAG", 103, -452, 10000, 10051, 10259, -10285, -10350],["Counting Paths in DAG", 825, 926, 986, -988, -10401, 10926, 11067, -11957],["Converting General Graph to DAG", 590, 907, 910, 1218, 10201, -10243, 10543, 10702, 10874, -10913, 11307, -11487, 11545, 11782, 12135]]},{"title":"Special Graphs (Others)", "arr":[["Tree", 112, 115, 122, 536, 615, 699, 712, 839, 10308, 10701, -10938, -11615, -11695],["Eulerian Graph", 117, 291, -10054, 10129, -10203, -10596],["Bipartite Graph", 670, 1184, 1194, 1201, 1212, 10080, -10349, 11045, -11138, -11159, 11418, 11419, 12083, 12168]]}]},{"title":"Mathematics", "arr":[{"title":"Ad Hoc Mathematics Problems", "arr":[["The Simpler Ones", 10055, 10071, 10281, 10469, -10773, 11614, -11723, 11805, -11875],["Mathematical Simulation (Brute Force)", 100, 371, 382, -616, 834, 846, 906, 10035, -10346, 10370, 10783, 10879, -11130, 11150, 11247, 11313, 11689, 11877, 11934, 11968, 11970],["Finding Pattern or Formula", 913, 10014, -10161, 10170, -10427, 10499, 10509, 10666, 10693, 10696, 10940, 10970, 10994, 11202, -11231, 11296],["Grid", -264, 808, 880, -10182, -10233, 10620, 10642],["Number Systems or Sequences", 136, 138, 413, -443, 640, 694, 962, 974, 1256, 10006, -10042, 10101, -10408, 10930, 11063, 11461, 11660],["Logarithm, Exponentiation, Power", 107, 113, -701, -10916, 11636, 11666, -11847, 11986],["Polynomial", 392, -498, -10268, 10302, -10586, 10719],["Base Number Variants", -377, -575, 10093, -10931, 11121],["Just Ad Hoc", 276, 344, 759, -10137, 10190, -11526, -11616, 11715, 11816]]},{"title":"Java BigInteger Class", "arr":[["Basic Features", 424, 465, 619, -713, 748, 1226, 10013, 10083, 10106, 10198, 10494, 10519, -10523, 10669, 10925, 11448, 11830, -11879, 12143],["Bonus Features", 290, 343, 355, -389, 446, 636, 1230, 10464, 10473, 10551, -10814, 11185, -11821]]},{"title":"Combinatorics", "arr":[["Fibonacci Numbers", 495, 580, -763, 900, 948, 1258, 10183, -10334, 10450, 10497, 10579, -10689, 10862, 11000, 11161, 11780],["Binomial Coefficients", 326, 369, -485, 530, 10105, -10219, 10375, -11955],["Catalan Numbers", -991, -10007, 10223, -10303],["Other Combinatorics", 1224, 1264, 10079, 10359, 10733, 10784, 10790, 10843, 10918, -11069, 11115, 11204, -11310, -11401, 11480, 11554, 11597, 11609]]},{"title":"Number Theory", "arr":[["Prime Numbers", 406, -543, 686, 897, 914, 1210, 10140, 10168, 10200, 10235, 10311, 10394, 10490, -10539, 10650, -10738, 10852, 10924, 10948, 11287, 11752],["GCD and/or LCM", 106, 332, 408, 412, 10193, -10407, -10892, 11388, 11417, -11827],["Factorial", -324, 568, -623, 10220, 10323, -10338],["Finding Prime Factors", -516, -583, 10392, -11466],["Working with Prime Factors", 160, 993, 10061, -10139, 10484, 10527, 10622, -10680, 10780, 10791, 11347, -11889, 12090],["Functions involving Prime Factors", -294, 884, 1246, -10179, 10299, 10699, 10820, 11064, 11086, 11226, 11327, -11728],["Modulo Arithmetic", 128, -374, 10127, 10174, -10176, -10212, 10489],["Extended Euclid", -10090, -10104, 10633, 10673],["Other Number Theory Problems", 547, 756, -10110, 10922, 10929, 11042, -11344, -11371]]},{"title":"Probability Theory", "arr":[["Standard", 474, 545, 10056, 10238, 10328, -10491, -10759, 11181, 11500, 11628, -12024]]},{"title":"Cycle-Finding", "arr":[["Standard", 202, 275, -350, 944, 10162, 10515, 10591, 11036, -11053, 11549, -11634]]},{"title":"Game Theory", "arr":[["Standard", 847, -10111, 10165, 10368, 10404, 10578, -11311, -11489]]},{"title":"Powers of a (Square) Matrix", "arr":[["Standard", -10229, -10681, -10870]]}]},{"title":"String Processing", "arr":[{"title":"Ad Hoc String Processing Problems", "arr":[["Cipher/Encode/Encrypt/Decode/Decrypt", 213, 245, 306, 444, 458, 468, 483, 492, 641, 739, 740, 741, 795, 850, 856, 865, 10222, -10851, -10878, 10896, 10921, 11220, 11278, -11385, 11541, 11697, 11716, 11787],["Frequency Counting", 895, -902, 10008, 10062, -10252, 10293, 10625, 10789, -11203, 11577],["Input Parsing", 271, 325, 327, 384, 391, 397, 442, 464, 486, 537, 576, 620, -622, 743, 933, -10058, 10854, 11148, -11878],["Output Formatting", 320, 445, -488, 490, 10500, -10800, -10894, 11074, 11965],["String Comparison", 409, -644, 671, -11048, -11056, 11233, 11713, 11734],["Just Ad Hoc", 153, 263, 789, 892, -941, 1200, 1215, 1219, 1239, 10115, 10197, 10361, 10391, -10393, 10508, 10679, 10761, -11452, 11483, 11839, 11962, 12134]]},{"title":"String Matching", "arr":[["Standard", 455, -10298, 11362, -11475, -11576, 11888],["In 2D Grid", -422, -10010, -11283]]},{"title":"String Processing with Dynamic Programming", "arr":[["Standard", 164, -526, 531, 963, 1192, 1207, 10066, 10100, 10192, 10405, 10617, -10635, 10739, -11151, 11258]]},{"title":"Suffix Trie, Tree, Array", "arr":[["Standard", 719, -760, 1223, 1227, 1254, -11107, -11512]]}]},{"title":"(Computational) Geometry", "arr":[{"title":"Basic Geometry", "arr":[["Points and Lines", 184, 191, 270, 356, 378, 587, 833, 837, -920, 1249, 10167, 10242, -10263, 10310, 10357, 10466, 10585, 10902, 10927, 11068, -11227, 11343, 11505],["Circles (only)", -10005, -10012, 10136, 10180, 10209, 10221, 10301, 10432, -10451, 10573, 10589, 10678, 11515],["Triangles (plus Circles)", 143, 190, 375, 438, 10195, 10210, 10286, 10347, 10387, 10522, -10577, 10991, -11152, 11479, 11854, -11909, 11936, 12165],["Quadrilaterals", 155, 201, -460, 476, 477, 10502, 10823, 10908, -11207, 11345, 11455, 11639, -11834],["Great-Circle Distance", -535, -10075, 10316, 10897, -11817],["Other 3D Objects", -737, -815, -10297]]},{"title":"Polygon", "arr":[["Standard", 109, 218, 361, 478, 634, 681, -811, 858, 1206, 10060, 10065, 10078, 10088, 10112, 10406, -10652, 11096, -11265, 11447, 11473, 11626]]},{"title":"Divide and Conquer", "arr":[["Standard", -152, -10245, 10566, 10668, 11378, -11646]]}]},{"title":"More Advanced Topics", "arr":[{"title":"Problem Decomposition", "arr":[["Two Components - Binary Search the Answer and Other", 714, 1199, 1221, 10804, -10816, -10983, -11262, 11516, 12255],["Two Components - Involving DP 1D Range Sum", 967, 10533, -10871, -10891, -11408],["Two Components - SSSP and DP", 10917, -10937, 10944, -11405, -11813],["Two Components - Involving Graph", 1243, 1250, 1263, 10307, 11267, -11324, -11635, -11721, 12070, 12074, 12159],["Two Components - Involving Mathematics", -10637, -10717, -11428, 11730, 12137],["Three/More Components", -1079, -10856, -11610]]},{"title":"More Advanced Dynamic Programming", "arr":[["DP + bitmask", 1099, 1204, 1252, -10296, 10364, 10651, -10817, 10911, 11218, -11391, 11472, 12063],["The More Challenging Ones", -473, 607, 882, 1096, 1211, 1214, 1220, 1222, 1228, 1231, 1236, 1238, 1240, 1244, 1245, 1248, 1255, 10069, 10081, 10163, 10164, 10271, -10482, -10626, 10898, 11285]]},{"title":"More Advanced Search", "arr":[["A*/IDA*", 652, 1217, 10073, -10181, -11163, -11212]]}]}]
